<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="comboItem9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAF/SURBVDhPY2CAArOVCv8rTsT9Lzsa/79wX8x/zy1a/2Fy
        RNEKU4T+Z5wS+V92Tud/6Tlt0g2Q7hH4n3RC+H/BGZ3/OUBMsgtABoQeFvmfelzvf8pJ3f8gLxHldMVS
        if9imaL/+bI5//sfEP8fd1Tvf+wR3f9Gi3n+yxXL/ZdNkiNskFKZ6v8b33f8D92v9T/8oP7/kH26/4MO
        6oANIMoVIEVKher/936b8z9wr9Z//926pGmG2SKTpAKOSok0CeJtRneidASRgYescfW6Tf9BeNnKtf8X
        L1v9f8Xq9WA+PrxyzUaIK1cBGU+ePv3/+MkTojBI7cvnr/8/e/b8/7oNW/4zTJs1//+vX7+Iwn9///3/
        5P2j/xnHZf5POzLt/67d+/4zTJg88/+Xr1+Jwt+//fh/+9ltcBqp39D6f9O27f8Zmtu6/9+7//B/b/9k
        kvCNm7f/z1+09D9DbUPb/6PHTv4/deoMSXjDlu3/p82cAwnI/olTSbId5Nq+CVPAmgFPDryhek55AgAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="comboItem10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAKdSURBVDhPpZJZSNRRFIf/GFQSDlNWroEZzbiRRA8JmjUj
        SplZQiVW6kPbSBBRuZZUajrWqNgq1UvUSxbtZWFK2mKl2ajT6KjpiJGC5lKmM5Z+XSfqISIKD3xwz72X
        H+f8zpGkycbbbBWmvAiadBGY8iMxZqzgvzTNF6LhQwLUr4HWDXQXR/N6X8C/i7Sd3wKNgVBqD49ngiGM
        xoJIqvcGUpu67C8sR58ehNRyJgaMIYyXzmW8zAMqhEhzKHTEgXnTDzp+w7wZBuJpLwqdEBBJSxiUzYLn
        87Bc96A9zw9z4WLa8/1pO76I1lx/mrV+mHIm8KUpy5umYwrepC1BMmhXM3RjKQPn5tJX5ExduoqPrRqG
        emMY/CDa648C63KwqAQhjHRFMdi5gdGROIwn1Uj12YH0G3bS/SKBrsoE+oy7sPZ68vnddGGunY2V2dnE
        FSazUZfEp04frGYlXwftMOT7IjWeXi+Ug7E0O4gHF6wtsxnSz4Z3ctGnZEPa3YM8twNpRzXdtatgWAE9
        EvXaRaKFAlHi+0C+VM1g5JUTwzVO0CDj/lUV6iMnCDh4Cc+sZ3ifqmF+agnhuRdZcfgcDx4EYc7zRKrT
        rRMmBjNSLsNS4SpwYezpHHjiyNr9OUgpnficfIWXrgrlKT3SnhbiUxPFuB0wZHoh6bVigRpEC3dlWB+6
        ClywlLiKqThC+TS2JB9g2iETirMGpiY1kJKxFSqnwEs5b9KFQO1RIVCtxnpVzuhNd4GbDcv1eXBPeHHH
        ntj0TKTETtKyxMY+FMbechaL50ptilIIZIaLctWMXZYzfsVd4PaLbyLnmiOjxU7otLHiLBM4Ybu/7cLr
        JAXSo20+lGu8KNu+UKD8I081njzRLLDx80/5TiWl20QFk43vQwQoI1S4lXsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Info:
Accelerating Compositing will increase the graphics performance by:
1.Mapping certain elements on the page into bitmaps
2.Maintaining painting order
3.Moving/transforming those bitmaps
4.Mapping to hardware
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>145, 368</value>
  </metadata>
</root>